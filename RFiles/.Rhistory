data_frame
data_clean
View(data_frame)
View(data_frame)
?ldply
??ldply
?ldaply
?ldapply
library(plyr)
.HTMLsearch(plyr)
plyr.HTMLsearch(query)
install.packages("~/Desktop/plyr_1.8.4.tar.gz", repos = NULL, type = "source")
library(plyr)
install.packages("ply")
install.packages("plyr")
library(plyr)
rm(list = ls(all.names = TRUE))
filenames <- list.files(path = "specdata/", pattern = NULL, all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE)
?ldply
pollutantmean <- function(directory,pollutant,id=1:332){
files <<- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id],
function(x) read.csv(paste(directory,x,sep = ''),
stringsAsFactors = FALSE)))
}
pollutantmean("specdata/","nitrate",70:72)
rm(ls=(all.names(TRUE)))
rm(list(ls.(all.names(TRUE)))
rm(list=ls(all.names = TRUE))
pollutantmean("specdata/","nitrate",70:72)
pollutantmean <- function(directory,pollutant,id=1:332){
files <<- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id],
function(x) read.csv(paste(directory,x,sep = ''),
stringsAsFactors = FALSE)))
}
pollutantmean("specdata/","nitrate",70:72)
View(data_frame)
View(data_frame)
?lapply
data_frame <<- do.call("rbind",lapply(files[id],
function(x) read.csv(paste(directory,x,sep = ''),
stringsAsFactors = TRUE)))
View(data_frame)
rm(list=ls(all.names = TRUE))
complete <- function(directory,id=1:332){
files <<- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id],
function(x) read.csv(paste(directory,x,sep = ''),
stringsAsFactors = FALSE)))
data_clean <<- data_frame[complete.cases(data_frame),]
}
complete("specdata/",70:72)
View(data_clean)
complete <- function(directory,id=1:332){
files <<- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id],
function(x) read.csv(paste(directory,x,sep = ''),
stringsAsFactors = FALSE)))
data_clean <<- data_frame[complete.cases(data_frame),]
num_times <<- aggregate(nitrate~ID,data_clean,length)
#names(num_times)
}
rm(list=ls(all.names = TRUE))
complete <- function(directory,id=1:332){
files <<- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id],
function(x) read.csv(paste(directory,x,sep = ''),
stringsAsFactors = FALSE)))
data_clean <<- data_frame[complete.cases(data_frame),]
num_times <<- aggregate(nitrate~ID,data_clean,length)
#names(num_times)
}
complete("specdata",70:72)
complete("specdata/",70:72)
num_times
complete("specdata/",1)
num_times
complete <- function(directory,id=1:332){
files <<- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id],
function(x) read.csv(paste(directory,x,sep = ''),
stringsAsFactors = FALSE)))
data_clean <<- data_frame[complete.cases(data_frame),]
num_times <<- aggregate(nitrate~ID,data_clean,length)
names(num_times)[2]<-'nobs'
}
rm(list=ls(all.names = TRUE))
complete <- function(directory,id=1:332){
files <<- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id],
function(x) read.csv(paste(directory,x,sep = ''),
stringsAsFactors = FALSE)))
data_clean <<- data_frame[complete.cases(data_frame),]
num_times <<- aggregate(nitrate~ID,data_clean,length)
names(num_times)[2]<-'nobs'
}
complete("specdata/",1)
rm(list=ls(all.names = TRUE))
complete <- function(directory,id=1:332){
files <<- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id],
function(x) read.csv(paste(directory,x,sep = ''),
stringsAsFactors = FALSE)))
data_clean <<- data_frame[complete.cases(data_frame),]
num_times <<- aggregate(nitrate~ID,data_clean,length)
names(num_times)[2]<-'nobs'
num_times
}
complete("specdata/",1)
complete("specdata/",c(2,4,8,10,12))
complete("specdata/",30:25)
complete("specdata/",3)
rm(list=ls(all.names = TRUE))
getwd()
complete <- function(directory,id=1:332){
files <<- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id],
function(x) read.csv(paste(directory,x,sep = ''),
stringsAsFactors = FALSE)))
data_clean <<- data_frame[complete.cases(data_frame),]
num_times <<- aggregate(nitrate~ID,data_clean,length)
names(num_times)[2]<-'nobs'
num_times
}
complete("specdata/",1:332)
rm(list=ls(all.names = TRUE))
complete <- function(directory,id=1:332){
files <<- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id],
function(x) read.csv(paste(directory,x,sep = ''),
stringsAsFactors = FALSE)))
data_clean <<- data_frame[complete.cases(data_frame),]
num_times <<- aggregate(nitrate~ID,data_clean,length)
names(num_times)[2]<-'nobs'
num_times
}
corr <- function(directory, threshold = 0) {
df = complete(directory)
ids = df[df["nobs"] > threshold, ]$id
corrr = numeric()
for (i in ids) {
newRead = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return(corrr)
}
cr <- corr("specdata", 150)
cr <- corr("specdata/", 150)
head(cr)
corr <- function(directory, threshold = 0) {
df = complete(directory)
ids = df[df["nobs"] > threshold, ]$id
corrr = numeric()
for (i in ids) {
newRead = read.csv(paste(directory, formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return(corrr)
}
cr <- corr("specdata/", 150)
head(cr)
complete <- function(directory,id=1:332){
files <<- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id],
function(x) read.csv(paste(directory,"/",x,sep = ''),
stringsAsFactors = FALSE)))
data_clean <<- data_frame[complete.cases(data_frame),]
num_times <<- aggregate(nitrate~ID,data_clean,length)
names(num_times)[2]<-'nobs'
num_times
}
complete("specdata",1:332)
corr <- function(directory, threshold = 0) {
df = complete(directory)
ids = df[df["nobs"] > threshold, ]$id
corrr = numeric()
for (i in ids) {
newRead = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
dff = newRead[complete.cases(newRead), ]
corrr = c(corrr, cor(dff$sulfate, dff$nitrate))
}
return(corrr)
}
complete <- function(directory,id=1:332){
files <<- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id],
function(x) read.csv(paste(directory,"/",x,sep = ''),
stringsAsFactors = FALSE)))
data_clean <<- data_frame[complete.cases(data_frame),]
num_times <<- aggregate(nitrate~ID,data_clean,length)
names(num_times)[2]<-'nobs'
num_times
}
cr <- corr("specdata", 150)
head(cr)
corr.file <- function(filename) {
data <- read.csv(paste(directory, "/", i, sep =""))
x <- complete.cases(data)
sulfate <- data[,2]
nitrate <- data[,3]
b <- cor(sulfate,nitrate)
if (j>threshold) return(b) else return(numeric())
}
a<- list.files("specdata")
correlations <- sapply (a,corr.file)
corr.file <- function(filename) {
data <- read.csv(paste(directory, "/", sep =""))
x <- complete.cases(data)
sulfate <- data[,2]
nitrate <- data[,3]
b <- cor(sulfate,nitrate)
if (j>threshold) return(b) else return(numeric())
}
correlations <- sapply (a,corr.file)
correlations <- sapply (a,complete)
corr <- function(directory, threshold = 0) {
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr)
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)])
return (tcorrs)
}
rm(list=ls(all.names = TRUE))
corr <- function(directory, threshold = 0) {
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr)
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)])
return (tcorrs)
}
cr <- corr("specdata",150)
head(cr)
summary(cr)
cr <- corr("specdata",400)
head(cr)
cr <- corr("specdata",5000)
length(cr)
rm(list=ls(all.names = TRUE))
pollutantmean <- function(directory,pollutant,id=1:332){
files <- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id], function(x) read.csv(paste(directory,x,sep = ''),stringsAsFactors = FALSE)))
data_clean <<- data_frame[complete.cases(data_frame),]
mean_pollut <<- data_clean[,pollutant]
mean(mean_pollut)
}
corr <- function(directory, threshold = 0) {
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr)
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)])
return (tcorrs)
}
complete <- function(directory,id=1:332){
files <<- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id],
function(x) read.csv(paste(directory,"/",x,sep = ''),
stringsAsFactors = FALSE)))
data_clean <<- data_frame[complete.cases(data_frame),]
num_times <<- aggregate(nitrate~ID,data_clean,length)
names(num_times)[2]<-'nobs'
num_times
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory,pollutant,id=1:332){
files <- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id], function(x) read.csv(paste(directory,"/",x,sep = ''),stringsAsFactors = FALSE)))
data_clean <<- data_frame[complete.cases(data_frame),]
mean_pollut <<- data_clean[,pollutant]
mean(mean_pollut)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
rm(list=ls(all.names = TRUE))
pollutantmean <- function(directory,pollutant,id=1:332){
files <- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id], function(x) read.csv(paste(directory,"/",x,sep = ''),stringsAsFactors = FALSE)))
data_clean <<- data_frame[complete.cases(data_frame),]
mean_pollut <<- data_clean[,pollutant]
mean(mean_pollut)
}
corr <- function(directory, threshold = 0) {
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr)
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)])
return (tcorrs)
}
complete <- function(directory,id=1:332){
files <<- dir(directory)
data_frame <<- do.call("rbind",lapply(files[id],
function(x) read.csv(paste(directory,"/",x,sep = ''),
stringsAsFactors = FALSE)))
data_clean <<- data_frame[complete.cases(data_frame),]
num_times <<- aggregate(nitrate~ID,data_clean,length)
names(num_times)[2]<-'nobs'
num_times
}
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
set.seed(42)
cc <- complete("specdata", 1:332)
use <- sample(332, 10)
print(cc[use, "nobs"])
set.seed(42)
cc <- complete("specdata", 1:332)
use <- sample(332, 1)
print(cc[use, "nobs"])
?gl
?colMeans
debug(lm)
lm(y-x)
swirl()
library(swirl)
swirl()
play()
View(flags)
next()
nxt()
head(flags)
play()
View(flags)
nxt()
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
swirl()
swirl()
play()
?str
?dim
?head
?str
?summary
summary(flags)
?viewinfo
?viem.info
?viewinfo
viewinfo(flags)
View(viewinfo)
View(viewinfo)
viewinfo(flags)
viewinfo()
View(data_frame)
View(data_frame)
viewinfo()
nxt()
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary
)
View(flags)
tapply(flags$population,flags$landmass,summary)
library(datasets)
data("iris")
?iris
data(iris)
sapply(iris,iris$Sepal.Length,mean)
play()
rm(list(ls(all.names = TRUE)))
rm(list=ls(all.names = TRUE)))
rm(list=ls(all.names = TRUE))
library(datasets)
data(iris)
iris
sapply(iris,iris$Sepal.Length,mean)
table(iris$Species)
sapply(iris,iris$Sepal.Length==virginica,mean)
table(iris$Species==virginica)
table(iris$Species=='virginica')
list <- as.list(iris$Species=='virginica')
list
list2 <- as.matrix(list)
list2
iris
sapply(iris,iris$Species,function(x) x == 'virginia')
sapply(iris$Species,function(x) x == 'virginia')
sapply(iris$Species,function(x) x == virginia)
tapply(iris,iris$Species,mean)
colMeans(iris)
colMeans(iris)
rowMeans(iris[, 1:4])
View(iris)
?apply
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
split(iris,iris$Species)
split(iris,iris$Species$virginica)
split(iris,iris$virginica)
table(iris[,"virginica"])
table(iris[,colnames(virginica)])
table(iris[,colnames('virginica')])
class(iris)
data.frame(iris[,"virginica"])
data.frame(iris[,c("virginica")])
split(iris,iris$virginica)
split(iris,iris$Species)
virginica <- iris[,'virginica']
virginica <- iris[,c('virginica')]
?split
split(iris,iris$Species,drop = true())
?as.data.frame
data1 <- subset(iris,Species == virginica)
data1 <- subset(iris,Species == 'virginica')
tapply(data1,data1$Sepal.Length,mean)
?tapply
?sapply
sapply(data1$Sepal.Length,mean)
sapply(sum(data1$Sepal.Length),mean)
mean(data1$Sepal.Length)
round(mean(data1$Sepal.Length))
rm(list=ls(all.names = true()))
data("mtcars")
mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
View(mtcars)
debug(ls)
ls
ls
ls()
tapply(mtcars$hp, mtcars$cyl, mean)
test <- tapply(mtcars$hp, mtcars$cyl, mean)
dif
fdf
